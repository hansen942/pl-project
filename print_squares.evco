let rec map f lst =  
  match lst with    
  | Nil x -> Nil    
  | Cons pair ->   
  Cons(f (proj 2 0 pair), map f (proj 2 1 pair))
 in
let ints_up_to n =
  if n < 0 then Nil else
  let rec helper k =
    if k > n then Nil else
    Cons(k,helper (k+1))
  in
  helper 0
in

let square x = x * x in

map print (map square (ints_up_to 10))
